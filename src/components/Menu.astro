---
import { faGithub } from '@fortawesome/free-brands-svg-icons'
import { faUpRightFromSquare } from '@fortawesome/free-solid-svg-icons'
import Fa from 'svelte-fa'

const currentPath = new URL(Astro.request.url).pathname

const pages = [
  { path: '/', text: 'Playground' },
  { path: '/docs/', text: 'Documentation' },
  { path: '/reference/', text: 'Function reference' },
  { path: '/implementations/', text: 'Implementations' },
  {
    path: 'https://github.com/orgs/jsonquerylang/',
    text: 'Source code',
    icon: faGithub,
    externalLink: true
  }
]

function isCurrentPath(path: string) {
  // match for example both "/docs" and "/docs/"
  return path === currentPath || `${path}/` === currentPath
}
---

<div class="menu">
  {pages.map(({path, text, icon, externalLink }) =>
      <a
          href={path}
          class={isCurrentPath(path) ? 'active' : ''}
          target={externalLink ? '_blank' : undefined}
      >
        {icon && <Fa icon={icon} />}
        {text}
        {externalLink && <span class="external-link">
          <Fa icon={faUpRightFromSquare} />
        </span>}
      </a>
  )}
</div>

<style>
  .menu {
    display: flex;
    flex-wrap: wrap;
    gap: var(--button-margin);
    row-gap: var(--button-margin);

    a {
      display: inline-block;
      text-decoration: none;
      background: white;
      color: var(--link-color);
      padding: var(--padding) calc(2 * var(--padding));
      border-radius: var(--border-radius);
    }
    a:hover,
    a:focus {
      background: var(--link-color-white-highlight);
    }

    a.active {
      background: var(--link-color);
      color: white;
    }
    a.active:hover,
    a.active:focus {
      background: var(--link-color-highlight);
    }

    a .external-link {
      visibility: hidden;
    }

    a:hover .external-link,
    a:active .external-link {
      visibility: visible;
    }
  }
</style>