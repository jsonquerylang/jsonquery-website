---
import type { MarkdownHeading } from '@astrojs/markdown-remark'
import Outline from '../components/Outline.svelte'
import Layout from '../layouts/Layout.astro'

interface Props {
  title: string
  description: string
  headings: MarkdownHeading[]
  enableSearch?: boolean
}

const { title, description, headings, enableSearch } = Astro.props
---

<Layout title={title} description={description}>
  <div class="content-wrapper">
   <div class="content">
      <slot />
   </div>
   <div class="outline">
     {
       enableSearch
         ? <Outline client:load headings={headings} enableSearch={enableSearch} />
         : <Outline headings={headings} />
     }
   </div>
  </div>
</Layout>

<style>
  .content-wrapper {
    align-self: center;
    padding: 10px 10px 20px;
    margin: 5em 0 0;
    width: 1020px; /* 1000 + 2 * padding */
    max-width: 100%;
    box-sizing: border-box;

    display: flex;
    flex-direction: row;
    gap: calc(4 * var(--padding));
  }

  .outline {
    width: 160px;
  }

  .content {
    flex: 1;
  }


  @media (max-width: 1020px) {
    .content-wrapper {
      flex-direction: column-reverse;
      margin: 2em 0 0;
    }

    .outline {
      display: flex;
      max-height: 200px;
    }
  }


  @media (max-width: 400px) {
    .outline {
      width: unset;
    }
  }

  :global(p) {
    line-height: 1.5em;
    overflow: auto;
  }

  :global(pre.astro-code) {
    padding: 5px;
    border-radius: 3px;
    line-height: 1.4em;
  }

  :global(table code),
  :global(p code) {
    background: var(--code-background);
    padding: 2px 5px;
    border-radius: var(--border-radius);
    display: inline-block;
  }

  :global(table) {
    border-collapse: collapse;
  }
  :global(table th),
  :global(table td) {
    border: var(--table-cell-border);
    padding: var(--table-cell-padding);
  }
</style>